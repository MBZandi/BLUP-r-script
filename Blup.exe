##### clean the memory
rm(list=ls())
ammy=function(sigma2e , sigma2a)
{
library(GeneticsPed)
library(pedigree)

Mrode3.1 <- read.table("data.txt", header=T)
# Mrode3.111 <- read.table(file.choose())


Mrode3.1

#setwd(choose.dir())
#save(Mrode3.1,file="Mrode3.1.RData")





(x <- Pedigree(x=Mrode3.1, subject="calf", ascendant=c("sire", "dam"),
 ascendantSex=c("Male", "Female"), sex="sex"))
 
 ##   yij = si + aj + eij ##
 
 ## Observed/measured phenotype records:
 
 (y <- x$wt)

desgn=function(v) {if(is.numeric(v)) {vn=v}
else
{vn=as.numeric(factor(v))}
mrow=length(vn)
mcol=max(vn)
x=matrix(data=c(0), nrow=mrow, ncol=mcol)
for(i in 1:mrow)
{ic=vn[i]
x[i,ic]=1}
return(x)}


x$sex=as.factor(x$sex)
X=desgn(x$sex)
X

x$animal=as.factor(x$calf)
f=desgn(x$calf)
f
#f=as.matrix(f)
#b=add.Inds(x)
#jd=function(n,m) {matrix(0,nrow=n, ncol=m)}
#k=jd(nrow(f),nrow(b)-ncol(f))

Z=f
Z


 
 ## Design matrix (X) for sex effect:
 #X <- model.matrix(~ x$sex - 1)
#X



 
 ## Design matrix (Z) for additive genetic effect.
 
 #(Z <- model.matrix(object=x, y=x$wt, id=x$calf))
y 



 ## Left hand side (LHS) of MME without G-1:
 LHS <- rbind(cbind(t(X) %*% X, t(X) %*% Z),
              cbind(t(Z) %*% X, t(Z) %*% Z))
LHS 
 ## or more efficiently
 
 (LHS <- rbind(cbind(crossprod(X), crossprod(X, Z)),
 cbind(crossprod(Z, X), crossprod(Z))))
 
RHS <- rbind(cbind(t(X) %*% y),
              cbind(t(Z) %*% y))

RHS

##  and adding G-1, which is in this case A-1a and 
##  a= Ve/Va=40/20=2
 
## We want Ainv for all individuals in the pedigree not only individuals
## with records
x <- extend(x)
x 
 Ainv <- inverseAdditive(x=x)
Ainv 
# sigma2a <- 20
# sigma2e <- 40
 alpha <- sigma2e / sigma2a
 q <- nIndividual(x)
 p <- nrow(LHS) - q
 (LHS[(p + 1):(p + q), (p + 1):(p + q)] <-
   LHS[(p + 1):(p + q), (p + 1):(p + q)] + Ainv * alpha)
   
   ## Right hand side (RHS) of MME:
   
   RHS <- rbind(t(X) %*% y,
                t(Z) %*% y)
RHS
    ## or more efficiently
    RRHS <- rbind(crossprod(X, y),
                  crossprod(Z, y))
RRHS
 t(RHS)
 
 sol <- solve(LHS) %*% RHS
 sol
 ## or more efficiently
 sol <- solve(LHS, RHS)

 return(sol)}
# write.table(sol,"blupoutput.txt")